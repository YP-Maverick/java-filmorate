DROP TABLE IF EXISTS "film";
DROP TABLE IF EXISTS "genre";
DROP TABLE IF EXISTS "mpa";
DROP TABLE IF EXISTS "users";
DROP TABLE IF EXISTS "friendship";
DROP TABLE IF EXISTS "film_likes";
DROP TABLE IF EXISTS "film_genre";

-- Создание таблиц
CREATE TABLE IF NOT EXISTS film (
    film_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(200) NOT NULL,
    mpa_id INT,
    description VARCHAR(200),
    release_date DATE NOT NULL,
    duration INT NOT NULL
);

CREATE TABLE IF NOT EXISTS genre (
     genre_id BIGINT PRIMARY KEY,
     name VARCHAR(200) NOT NULL
);

CREATE TABLE IF NOT EXISTS mpa (
    mpa_id BIGINT PRIMARY KEY,
    name VARCHAR(200) NOT NULL
);

CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(200) NOT NULL UNIQUE,
    login VARCHAR(200) NOT NULL UNIQUE,
    name VARCHAR(200),
    birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS friendship (
    user_id BIGINT,
    friend_id BIGINT,
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (friend_id) REFERENCES users(id)
    );

CREATE TABLE IF NOT EXISTS film_likes (
    user_id BIGINT,
    film_id BIGINT,
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (film_id) REFERENCES film(film_id)
);

CREATE TABLE IF NOT EXISTS film_genre (
    film_id BIGINT,
    genre_id INT,
    FOREIGN KEY (film_id) REFERENCES film(film_id),
    FOREIGN KEY (genre_id) REFERENCES genre(genre_id)
);

-- Добавление ограничения целостности для связи film.mpa_id > mpa.mpa_id
ALTER TABLE film ADD CONSTRAINT IF NOT EXISTS fk_mpa_id FOREIGN KEY (mpa_id) REFERENCES mpa(mpa_id);
